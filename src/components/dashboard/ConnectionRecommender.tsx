
import { useState } from "react";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Search, MessageSquare, Briefcase, User, Star } from "lucide-react";
import { toast } from "sonner";

const ConnectionRecommender = () => {
  const [query, setQuery] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [connections, setConnections] = useState<Array<{
    id: string;
    name: string;
    title: string;
    company: string;
    skills: string[];
    relevanceScore: number;
    location: string;
    photo?: string;
  }> | null>(null);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!query.trim()) {
      toast.error("Please enter a connection search query");
      return;
    }
    
    setIsLoading(true);
    
    try {
      // This would be replaced with an actual LLM API call
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      // Mock data - would be generated by LLM
      setConnections([
        {
          id: "1",
          name: "Sarah Mueller",
          title: "Blockchain Lead Developer",
          company: "GreenChain Solutions",
          skills: ["Blockchain", "Solidity", "Climate Tech", "Carbon Credits"],
          relevanceScore: 96,
          location: "Berlin",
          photo: "https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=200&h=200&fit=crop"
        },
        {
          id: "2",
          name: "Thomas Weber",
          title: "CTO",
          company: "ClimateBlock",
          skills: ["Blockchain Architecture", "Green Tech", "Sustainability"],
          relevanceScore: 92,
          location: "Berlin",
          photo: "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=200&h=200&fit=crop"
        },
        {
          id: "3",
          name: "Anya Petrova",
          title: "Product Manager",
          company: "EcoToken",
          skills: ["Blockchain Products", "Sustainability", "Carbon Markets"],
          relevanceScore: 88,
          location: "Berlin",
          photo: "https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?w=200&h=200&fit=crop"
        },
        {
          id: "4",
          name: "Lucas Schmidt",
          title: "Senior Blockchain Developer",
          company: "Climate Chain Coalition",
          skills: ["Smart Contracts", "DeFi", "Environmental Impact"],
          relevanceScore: 85,
          location: "Berlin",
          photo: "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=200&h=200&fit=crop"
        }
      ]);
      
      toast.success("Connection recommendations found!");
    } catch (error) {
      toast.error("Failed to find connections. Please try again.");
      console.error(error);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="space-y-6">
      <form onSubmit={handleSubmit} className="flex gap-2">
        <Input
          placeholder="e.g., Connect with blockchain developers in Berlin working on climate tech"
          value={query}
          onChange={(e) => setQuery(e.target.value)}
          className="flex-1"
        />
        <Button type="submit" disabled={isLoading}>
          {isLoading ? "Searching..." : <Search className="mr-2" />}
          {isLoading ? "" : "Search"}
        </Button>
      </form>

      {connections && (
        <div className="mt-6 space-y-4">
          <div className="grid gap-4 md:grid-cols-2">
            {connections.map((connection) => (
              <div 
                key={connection.id} 
                className="border rounded-lg p-4 flex flex-col justify-between"
              >
                <div className="flex gap-4">
                  <div className="flex-shrink-0">
                    {connection.photo ? (
                      <div className="w-16 h-16 rounded-full overflow-hidden">
                        <img 
                          src={connection.photo} 
                          alt={connection.name} 
                          className="w-full h-full object-cover"
                        />
                      </div>
                    ) : (
                      <div className="w-16 h-16 rounded-full bg-muted flex items-center justify-center">
                        <User size={24} className="text-muted-foreground" />
                      </div>
                    )}
                  </div>
                  <div>
                    <h3 className="font-semibold text-lg flex items-center gap-2">
                      {connection.name}
                      <span className="bg-primary/10 text-primary text-xs px-2 py-0.5 rounded-full flex items-center gap-1">
                        <Star size={12} />
                        {connection.relevanceScore}%
                      </span>
                    </h3>
                    <p className="text-sm text-muted-foreground flex items-center gap-1">
                      <Briefcase size={14} />
                      {connection.title} at {connection.company}
                    </p>
                    <p className="text-sm text-muted-foreground">{connection.location}</p>
                  </div>
                </div>
                <div className="mt-3">
                  <div className="flex flex-wrap gap-1.5 mt-2">
                    {connection.skills.map((skill, i) => (
                      <span 
                        key={i}
                        className="px-2 py-0.5 bg-secondary text-secondary-foreground text-xs rounded-full"
                      >
                        {skill}
                      </span>
                    ))}
                  </div>
                </div>
                <div className="mt-3 pt-3 border-t flex justify-end">
                  <Button variant="outline" size="sm" className="flex items-center gap-1">
                    <MessageSquare size={16} />
                    Connect
                  </Button>
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  );
};

export default ConnectionRecommender;
