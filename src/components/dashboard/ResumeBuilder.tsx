
import { useState } from "react";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";
import { Search, Download, FileText } from "lucide-react";
import { toast } from "sonner";

const ResumeBuilder = () => {
  const [query, setQuery] = useState("");
  const [userExperience, setUserExperience] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [resume, setResume] = useState<{
    title: string;
    summary: string;
    skills: string[];
    experience: Array<{
      title: string;
      company: string;
      duration: string;
      achievements: string[];
    }>;
    education: Array<{
      degree: string;
      institution: string;
      year: string;
    }>;
    relevantKeywords: string[];
  } | null>(null);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!query.trim() || !userExperience.trim()) {
      toast.error("Please fill in all required fields");
      return;
    }
    
    setIsLoading(true);
    
    try {
      // This would be replaced with an actual LLM API call
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      // Mock data - would be generated by LLM
      setResume({
        title: "Product Manager Resume for Meta",
        summary: "User experience designer with 5+ years of experience, transitioning to product management with a strong focus on user-centered design principles. Proven track record of improving user satisfaction metrics by 40% through thoughtful design implementation and cross-functional collaboration.",
        skills: [
          "Product Strategy", 
          "Wireframing & Prototyping", 
          "User Research", 
          "A/B Testing", 
          "Agile Methodologies",
          "Stakeholder Management", 
          "Data Analysis", 
          "UX Design"
        ],
        experience: [
          {
            title: "Lead UX Designer (reframed for Product Management)",
            company: "DesignTech Solutions",
            duration: "2020-Present",
            achievements: [
              "Led cross-functional team to launch 3 major product features that increased user retention by 25%",
              "Analyzed user metrics to identify key pain points and prioritize product improvements, resulting in 32% higher engagement",
              "Collaborated with engineering and business stakeholders to translate user needs into actionable product requirements",
              "Implemented product measurement framework that tracked KPIs across user journey touchpoints"
            ]
          },
          {
            title: "UX Designer (reframed for Product Management)",
            company: "CreativeWeb Agency",
            duration: "2018-2020",
            achievements: [
              "Managed product backlog and user story creation process, ensuring development team had clear objectives",
              "Conducted competitive analysis that informed product strategy and positioning",
              "Created data-driven product roadmaps based on user feedback and business goals",
              "Facilitated product discovery workshops to align stakeholder expectations"
            ]
          }
        ],
        education: [
          {
            degree: "Master of Human-Computer Interaction",
            institution: "Stanford University",
            year: "2018"
          },
          {
            degree: "Bachelor of Design",
            institution: "Rhode Island School of Design",
            year: "2016"
          }
        ],
        relevantKeywords: [
          "Product Development",
          "User-Centered Design",
          "Product Metrics",
          "Meta Design System",
          "Product Requirements",
          "Interactive Prototypes",
          "Product Lifecycle",
          "Go-To-Market Strategy"
        ]
      });
      
      toast.success("Resume tailored successfully!");
    } catch (error) {
      toast.error("Failed to generate resume. Please try again.");
      console.error(error);
    } finally {
      setIsLoading(false);
    }
  };

  const handleDownload = () => {
    toast.success("Resume downloaded successfully!");
    // In a real app, this would generate and download a PDF/DOCX
  };

  return (
    <div className="space-y-6">
      <div className="grid gap-4 md:grid-cols-2">
        <div>
          <label htmlFor="query" className="block text-sm font-medium mb-1">
            Target Position & Company
          </label>
          <Input
            id="query"
            placeholder="e.g., Convert my UX design experience into a Product Manager resume for Meta"
            value={query}
            onChange={(e) => setQuery(e.target.value)}
          />
        </div>
        <div>
          <label htmlFor="experience" className="block text-sm font-medium mb-1">
            Your Current Experience
          </label>
          <Textarea
            id="experience"
            placeholder="Summarize your current experience and skills..."
            value={userExperience}
            onChange={(e) => setUserExperience(e.target.value)}
            rows={4}
          />
        </div>
      </div>
      
      <Button onClick={handleSubmit} disabled={isLoading} className="w-full md:w-auto">
        {isLoading ? "Generating..." : <Search className="mr-2" />}
        {isLoading ? "" : "Generate Tailored Resume"}
      </Button>

      {resume && (
        <div className="mt-8 border rounded-lg p-6 bg-card">
          <div className="flex justify-between items-start mb-4">
            <h3 className="text-2xl font-bold">{resume.title}</h3>
            <Button onClick={handleDownload} variant="outline" size="sm" className="flex items-center gap-1">
              <Download size={16} />
              Download Resume
            </Button>
          </div>
          
          <div className="space-y-6">
            <div>
              <h4 className="text-lg font-semibold mb-2">Professional Summary</h4>
              <p className="text-muted-foreground">{resume.summary}</p>
            </div>
            
            <div>
              <h4 className="text-lg font-semibold mb-2">Skills</h4>
              <div className="flex flex-wrap gap-2">
                {resume.skills.map((skill, index) => (
                  <span 
                    key={index}
                    className="px-2 py-1 bg-secondary text-secondary-foreground text-sm rounded-md"
                  >
                    {skill}
                  </span>
                ))}
              </div>
            </div>
            
            <div>
              <h4 className="text-lg font-semibold mb-2">Experience</h4>
              <div className="space-y-4">
                {resume.experience.map((exp, index) => (
                  <div key={index} className="border-l-2 border-primary pl-4 pb-2">
                    <h5 className="font-semibold">{exp.title}</h5>
                    <p className="text-sm text-muted-foreground">{exp.company} | {exp.duration}</p>
                    <ul className="mt-2 space-y-1 list-disc list-inside text-sm">
                      {exp.achievements.map((achievement, i) => (
                        <li key={i}>{achievement}</li>
                      ))}
                    </ul>
                  </div>
                ))}
              </div>
            </div>
            
            <div>
              <h4 className="text-lg font-semibold mb-2">Education</h4>
              <div className="space-y-2">
                {resume.education.map((edu, index) => (
                  <div key={index}>
                    <p className="font-medium">{edu.degree}</p>
                    <p className="text-sm text-muted-foreground">{edu.institution}, {edu.year}</p>
                  </div>
                ))}
              </div>
            </div>
            
            <div>
              <h4 className="text-lg font-semibold mb-2">
                <div className="flex items-center gap-2">
                  <FileText size={16} />
                  Relevant Keywords for ATS
                </div>
              </h4>
              <div className="flex flex-wrap gap-2">
                {resume.relevantKeywords.map((keyword, index) => (
                  <span 
                    key={index}
                    className="px-2 py-1 bg-primary/10 text-primary text-xs rounded-full"
                  >
                    {keyword}
                  </span>
                ))}
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default ResumeBuilder;
